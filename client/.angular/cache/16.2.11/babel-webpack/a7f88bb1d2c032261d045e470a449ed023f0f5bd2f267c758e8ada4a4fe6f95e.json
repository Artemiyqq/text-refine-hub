{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["D:\\Projects\\text-refine-hub\\client\\src\\app\\core\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, lastValueFrom } from 'rxjs';\nimport { TextDTO } from '../models/text-dto.model';\nimport { Observable }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private textApiUrl = `http://localhost:5171/api/Text`\n  private docxApiUrl = `${environment.apiUrl}/Docx`\n\n  constructor(private http: HttpClient) { }\n\n  postPastedText(text: string): Observable<string> {\n    const textDto: TextDTO = new TextDTO(text);\n    return this.http.post(`${this.textApiUrl}`, textDto, { responseType: 'text' });\n  }\n\n  async postDocxFile(file: File): Promise<string> {\n    try {\n      const formData: FormData = new FormData();\n      formData.append('file', file);\n\n      const result = await lastValueFrom(this.http.post<string>(`${this.docxApiUrl}/docx`, formData));\n      return result;\n    } catch (error) {\n      console.log('Error in processing docx', error);\n      throw error;\n    }\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}