{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ResultService {\n  constructor() {\n    this.processedTextSubject = new BehaviorSubject('');\n    this.linkToProcessedFileSubject = new BehaviorSubject('');\n  }\n  setProcessedText(processedText) {\n    this.processedTextSubject.next(processedText);\n  }\n  getProcessedText() {\n    return this.processedTextSubject.asObservable();\n  }\n  setLinkToProcessedFile(linkToProcessedFile) {\n    this.linkToProcessedFileSubject.next(linkToProcessedFile);\n  }\n  getLinkToProcessedFile() {\n    return this.linkToProcessedFileSubject.asObservable();\n  }\n  static #_ = this.ɵfac = function ResultService_Factory(t) {\n    return new (t || ResultService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ResultService,\n    factory: ResultService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ResultService","constructor","processedTextSubject","linkToProcessedFileSubject","setProcessedText","processedText","next","getProcessedText","asObservable","setLinkToProcessedFile","linkToProcessedFile","getLinkToProcessedFile","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\text-refine-hub\\client\\src\\app\\core\\services\\result.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n  private processedTextSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  private linkToProcessedFileSubject: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  \n\n  setProcessedText(processedText: string): void{\n    this.processedTextSubject.next(processedText);\n  }\n\n  getProcessedText(): Observable<string> {\n    return this.processedTextSubject.asObservable();\n  }\n\n  setLinkToProcessedFile(linkToProcessedFile: string): void{\n    this.linkToProcessedFileSubject.next(linkToProcessedFile);\n  }\n\n  getLinkToProcessedFile(): Observable<string> {\n    return this.linkToProcessedFileSubject.asObservable();\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,oBAAoB,GAA4B,IAAIH,eAAe,CAAS,EAAE,CAAC;IAE/E,KAAAI,0BAA0B,GAA4B,IAAIJ,eAAe,CAAS,EAAE,CAAC;;EAG7FK,gBAAgBA,CAACC,aAAqB;IACpC,IAAI,CAACH,oBAAoB,CAACI,IAAI,CAACD,aAAa,CAAC;EAC/C;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACL,oBAAoB,CAACM,YAAY,EAAE;EACjD;EAEAC,sBAAsBA,CAACC,mBAA2B;IAChD,IAAI,CAACP,0BAA0B,CAACG,IAAI,CAACI,mBAAmB,CAAC;EAC3D;EAEAC,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACR,0BAA0B,CAACK,YAAY,EAAE;EACvD;EAAC,QAAAI,CAAA,G;qBApBUZ,aAAa;EAAA;EAAA,QAAAa,EAAA,G;WAAbb,aAAa;IAAAc,OAAA,EAAbd,aAAa,CAAAe,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}